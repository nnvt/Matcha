{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _padEnd = _interopRequireDefault(require(\"lodash/padEnd\"));\n\nvar StatisticNumber = function StatisticNumber(props) {\n  var value = props.value,\n      formatter = props.formatter,\n      precision = props.precision,\n      decimalSeparator = props.decimalSeparator,\n      _props$groupSeparator = props.groupSeparator,\n      groupSeparator = _props$groupSeparator === void 0 ? '' : _props$groupSeparator,\n      prefixCls = props.prefixCls;\n  var valueNode;\n\n  if (typeof formatter === 'function') {\n    // Customize formatter\n    valueNode = formatter(value);\n  } else {\n    // Internal formatter\n    var val = String(value);\n    var cells = val.match(/^(-?)(\\d*)(\\.(\\d+))?$/); // Process if illegal number\n\n    if (!cells || val === '-') {\n      valueNode = val;\n    } else {\n      var negative = cells[1];\n      var int = cells[2] || '0';\n      var decimal = cells[4] || '';\n      int = int.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\n\n      if (typeof precision === 'number') {\n        decimal = (0, _padEnd[\"default\"])(decimal, precision, '0').slice(0, precision);\n      }\n\n      if (decimal) {\n        decimal = \"\".concat(decimalSeparator).concat(decimal);\n      }\n\n      valueNode = [/*#__PURE__*/React.createElement(\"span\", {\n        key: \"int\",\n        className: \"\".concat(prefixCls, \"-content-value-int\")\n      }, negative, int), decimal && /*#__PURE__*/React.createElement(\"span\", {\n        key: \"decimal\",\n        className: \"\".concat(prefixCls, \"-content-value-decimal\")\n      }, decimal)];\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-content-value\")\n  }, valueNode);\n};\n\nvar _default = StatisticNumber;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/Matcha/client/node_modules/antd/lib/statistic/Number.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","React","_padEnd","StatisticNumber","props","formatter","precision","decimalSeparator","_props$groupSeparator","groupSeparator","prefixCls","valueNode","val","String","cells","match","negative","int","decimal","replace","slice","concat","createElement","key","className","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _padEnd = _interopRequireDefault(require(\"lodash/padEnd\"));\n\nvar StatisticNumber = function StatisticNumber(props) {\n  var value = props.value,\n      formatter = props.formatter,\n      precision = props.precision,\n      decimalSeparator = props.decimalSeparator,\n      _props$groupSeparator = props.groupSeparator,\n      groupSeparator = _props$groupSeparator === void 0 ? '' : _props$groupSeparator,\n      prefixCls = props.prefixCls;\n  var valueNode;\n\n  if (typeof formatter === 'function') {\n    // Customize formatter\n    valueNode = formatter(value);\n  } else {\n    // Internal formatter\n    var val = String(value);\n    var cells = val.match(/^(-?)(\\d*)(\\.(\\d+))?$/); // Process if illegal number\n\n    if (!cells || val === '-') {\n      valueNode = val;\n    } else {\n      var negative = cells[1];\n      var int = cells[2] || '0';\n      var decimal = cells[4] || '';\n      int = int.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\n\n      if (typeof precision === 'number') {\n        decimal = (0, _padEnd[\"default\"])(decimal, precision, '0').slice(0, precision);\n      }\n\n      if (decimal) {\n        decimal = \"\".concat(decimalSeparator).concat(decimal);\n      }\n\n      valueNode = [/*#__PURE__*/React.createElement(\"span\", {\n        key: \"int\",\n        className: \"\".concat(prefixCls, \"-content-value-int\")\n      }, negative, int), decimal && /*#__PURE__*/React.createElement(\"span\", {\n        key: \"decimal\",\n        className: \"\".concat(prefixCls, \"-content-value-decimal\")\n      }, decimal)];\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-content-value\")\n  }, valueNode);\n};\n\nvar _default = StatisticNumber;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}