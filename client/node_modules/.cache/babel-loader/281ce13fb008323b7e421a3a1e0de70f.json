{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Matcha\\\\client\\\\src\\\\components\\\\Security.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Context } from \"../Contexts/Context\";\nimport { LockOutlined } from \"@ant-design/icons\";\nimport { changePassword } from \"../actions/editActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Security = () => {\n  _s();\n\n  const {\n    state\n  } = useContext(Context);\n\n  const [form] = _Form.useForm();\n\n  const [passwords, setPasswords] = useState({\n    oldpassword: \"\",\n    newpassword: \"\",\n    confirmpassword: \"\"\n  });\n\n  const clearStatePass = () => {\n    setPasswords({\n      oldpassword: \"\",\n      newpassword: \"\",\n      confirmpassword: \"\"\n    });\n  };\n\n  const handleUPasswordChange = e => {\n    setPasswords({ ...passwords,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitChangePass = async () => {\n    _message.loading(\"Loading...\", 2);\n\n    const res = await changePassword(state.token, passwords);\n    clearStatePass();\n\n    if (res.success) {\n      setTimeout(() => {\n        _message.success(res.message, 4);\n      }, 3000);\n    } else {\n      setTimeout(() => {\n        _message.error(res.error, 4);\n      }, 3000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Row, {\n    children: /*#__PURE__*/_jsxDEV(_Col, {\n      md: 12,\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(_Form, {\n        form: form,\n        children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"oldpassword\",\n          children: /*#__PURE__*/_jsxDEV(_Input.Password, {\n            autoComplete: \"on\",\n            name: \"oldpassword\",\n            type: \"password\",\n            onChange: e => handleUPasswordChange(e),\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n              style: {\n                marginRight: \"6px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 23\n            }, this),\n            placeholder: \"Current password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"newpassword\",\n          children: /*#__PURE__*/_jsxDEV(_Input.Password, {\n            autoComplete: \"on\",\n            name: \"newpassword\",\n            type: \"password\",\n            onChange: e => handleUPasswordChange(e),\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n              style: {\n                marginRight: \"6px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 23\n            }, this),\n            placeholder: \"New password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"confirmpassword\",\n          required: true,\n          children: /*#__PURE__*/_jsxDEV(_Input.Password, {\n            autoComplete: \"on\",\n            name: \"confirmpassword\",\n            type: \"password\",\n            onChange: e => handleUPasswordChange(e),\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n              style: {\n                marginRight: \"6px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 23\n            }, this),\n            placeholder: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(_Button, {\n            onClick: e => {\n              submitChangePass();\n              form.resetFields();\n            },\n            type: \"primary\",\n            style: {\n              fontSize: \"0.7em\",\n              marginTop: \"20px\",\n              borderRadius: \"8px\",\n              padding: \"4px 10px\"\n            },\n            children: \"Change password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Security, \"fCx7L8L7wBNDnfE1rkXRGZnmkoQ=\", false, function () {\n  return [_Form.useForm];\n});\n\n_c = Security;\n\nvar _c;\n\n$RefreshReg$(_c, \"Security\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/Matcha/client/src/components/Security.js"],"names":["React","useState","useContext","Context","LockOutlined","changePassword","Security","state","form","useForm","passwords","setPasswords","oldpassword","newpassword","confirmpassword","clearStatePass","handleUPasswordChange","e","target","name","value","submitChangePass","loading","res","token","success","setTimeout","message","error","marginRight","resetFields","fontSize","marginTop","borderRadius","padding"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { Context } from \"../Contexts/Context\";\r\nimport { Row, Col, Form, Input, Button, message } from \"antd\";\r\nimport { LockOutlined } from \"@ant-design/icons\";\r\nimport { changePassword } from \"../actions/editActions\";\r\n\r\nexport const Security = () => {\r\n  const { state } = useContext(Context);\r\n  const [form] = Form.useForm();\r\n  const [passwords, setPasswords] = useState({\r\n    oldpassword: \"\",\r\n    newpassword: \"\",\r\n    confirmpassword: \"\",\r\n  });\r\n\r\n  const clearStatePass = () => {\r\n    setPasswords({\r\n      oldpassword: \"\",\r\n      newpassword: \"\",\r\n      confirmpassword: \"\",\r\n    });\r\n  };\r\n\r\n  const handleUPasswordChange = (e) => {\r\n    setPasswords({\r\n      ...passwords,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const submitChangePass = async () => {\r\n    message.loading(\"Loading...\", 2);\r\n    const res = await changePassword(state.token, passwords);\r\n\r\n    clearStatePass();\r\n    if (res.success) {\r\n      setTimeout(() => {\r\n        message.success(res.message, 4);\r\n      }, 3000);\r\n    } else {\r\n      setTimeout(() => {\r\n        message.error(res.error, 4);\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={12} span={24}>\r\n        <Form form={form}>\r\n          <Form.Item name=\"oldpassword\">\r\n            <Input.Password\r\n              autoComplete=\"on\"\r\n              name=\"oldpassword\"\r\n              type=\"password\"\r\n              onChange={(e) => handleUPasswordChange(e)}\r\n              prefix={<LockOutlined style={{ marginRight: \"6px\" }} />}\r\n              placeholder=\"Current password\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name=\"newpassword\">\r\n            <Input.Password\r\n              autoComplete=\"on\"\r\n              name=\"newpassword\"\r\n              type=\"password\"\r\n              onChange={(e) => handleUPasswordChange(e)}\r\n              prefix={<LockOutlined style={{ marginRight: \"6px\" }} />}\r\n              placeholder=\"New password\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name=\"confirmpassword\" required>\r\n            <Input.Password\r\n              autoComplete=\"on\"\r\n              name=\"confirmpassword\"\r\n              type=\"password\"\r\n              onChange={(e) => handleUPasswordChange(e)}\r\n              prefix={<LockOutlined style={{ marginRight: \"6px\" }} />}\r\n              placeholder=\"Confirm Password\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              onClick={(e) => {\r\n                submitChangePass();\r\n                form.resetFields();\r\n              }}\r\n              type=\"primary\"\r\n              style={{\r\n                fontSize: \"0.7em\",\r\n                marginTop: \"20px\",\r\n                borderRadius: \"8px\",\r\n                padding: \"4px 10px\",\r\n              }}>\r\n              Change password\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}