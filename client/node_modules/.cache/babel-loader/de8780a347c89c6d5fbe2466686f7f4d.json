{"ast":null,"code":"import { SUCCESS, FAILED, USER_AUTH, REMOVE_ERRORS, EDITSUCCESS, COMPLETE, LOGOUT } from \"../actions/actionTypes\";\nconst token = localStorage.getItem(\"token\");\nexport const InitialState = {\n  success: false,\n  successMessage: \"\",\n  errorMessage: \"\",\n  isCompletinfo: false,\n  token: token,\n  username: \"\",\n  id: \"\",\n  errors: {\n    username: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\"\n  }\n};\nexport const UserReducer = (state = InitialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case SUCCESS:\n      return { ...state,\n        success: payload.success,\n        successMessage: payload.successMessage,\n        token: payload.token,\n        username: payload.username\n      };\n\n    case USER_AUTH:\n      return { ...state,\n        user: {\n          id: payload.id\n        }\n      };\n\n    case EDITSUCCESS:\n      return { ...state,\n        success: payload.success,\n        successMessage: payload.successMessage\n      };\n\n    case COMPLETE:\n      return { ...state,\n        success: payload.success,\n        isCompletinfo: payload.isCompletinfo,\n        username: payload.username,\n        id: payload.id\n      };\n\n    case FAILED:\n      return { ...state,\n        errorMessage: payload.error,\n        success: false\n      };\n\n    case REMOVE_ERRORS:\n      return { ...state,\n        errorMessage: \"\"\n      };\n\n    case LOGOUT:\n      return { ...state,\n        token: \"\",\n        isCompletinfo: false,\n        username: \"\",\n        id: \"\",\n        successMessage: \"\"\n      };\n\n    default:\n      throw new Error();\n  }\n};\n_c = UserReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserReducer\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/Matcha/client/src/Reducers/UserReducer.js"],"names":["SUCCESS","FAILED","USER_AUTH","REMOVE_ERRORS","EDITSUCCESS","COMPLETE","LOGOUT","token","localStorage","getItem","InitialState","success","successMessage","errorMessage","isCompletinfo","username","id","errors","firstname","lastname","email","password","confirmpassword","UserReducer","state","action","type","payload","user","error","Error"],"mappings":"AAAA,SACEA,OADF,EAEEC,MAFF,EAGEC,SAHF,EAIEC,aAJF,EAKEC,WALF,EAMEC,QANF,EAOEC,MAPF,QAQO,wBARP;AAUA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,KADiB;AAE1BC,EAAAA,cAAc,EAAE,EAFU;AAG1BC,EAAAA,YAAY,EAAE,EAHY;AAI1BC,EAAAA,aAAa,EAAE,KAJW;AAK1BP,EAAAA,KAAK,EAAEA,KALmB;AAM1BQ,EAAAA,QAAQ,EAAE,EANgB;AAO1BC,EAAAA,EAAE,EAAE,EAPsB;AAQ1BC,EAAAA,MAAM,EAAE;AACNF,IAAAA,QAAQ,EAAE,EADJ;AAENG,IAAAA,SAAS,EAAE,EAFL;AAGNC,IAAAA,QAAQ,EAAE,EAHJ;AAINC,IAAAA,KAAK,EAAE,EAJD;AAKNC,IAAAA,QAAQ,EAAE,EALJ;AAMNC,IAAAA,eAAe,EAAE;AANX;AARkB,CAArB;AAkBP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGd,YAAT,EAAuBe,MAAvB,KAAkC;AAC3D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAK1B,OAAL;AACE,aAAO,EACL,GAAGwB,KADE;AAELb,QAAAA,OAAO,EAAEgB,OAAO,CAAChB,OAFZ;AAGLC,QAAAA,cAAc,EAAEe,OAAO,CAACf,cAHnB;AAILL,QAAAA,KAAK,EAAEoB,OAAO,CAACpB,KAJV;AAMLQ,QAAAA,QAAQ,EAAEY,OAAO,CAACZ;AANb,OAAP;;AAQF,SAAKb,SAAL;AACE,aAAO,EACL,GAAGsB,KADE;AAELI,QAAAA,IAAI,EAAE;AACJZ,UAAAA,EAAE,EAAEW,OAAO,CAACX;AADR;AAFD,OAAP;;AAMF,SAAKZ,WAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELb,QAAAA,OAAO,EAAEgB,OAAO,CAAChB,OAFZ;AAGLC,QAAAA,cAAc,EAAEe,OAAO,CAACf;AAHnB,OAAP;;AAKF,SAAKP,QAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELb,QAAAA,OAAO,EAAEgB,OAAO,CAAChB,OAFZ;AAGLG,QAAAA,aAAa,EAAEa,OAAO,CAACb,aAHlB;AAILC,QAAAA,QAAQ,EAAEY,OAAO,CAACZ,QAJb;AAKLC,QAAAA,EAAE,EAAEW,OAAO,CAACX;AALP,OAAP;;AAOF,SAAKf,MAAL;AACE,aAAO,EAAE,GAAGuB,KAAL;AAAYX,QAAAA,YAAY,EAAEc,OAAO,CAACE,KAAlC;AAAyClB,QAAAA,OAAO,EAAE;AAAlD,OAAP;;AACF,SAAKR,aAAL;AACE,aAAO,EAAE,GAAGqB,KAAL;AAAYX,QAAAA,YAAY,EAAE;AAA1B,OAAP;;AACF,SAAKP,MAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELjB,QAAAA,KAAK,EAAE,EAFF;AAGLO,QAAAA,aAAa,EAAE,KAHV;AAILC,QAAAA,QAAQ,EAAE,EAJL;AAKLC,QAAAA,EAAE,EAAE,EALC;AAMLJ,QAAAA,cAAc,EAAE;AANX,OAAP;;AAQF;AACE,YAAM,IAAIkB,KAAJ,EAAN;AA7CJ;AA+CD,CAlDM;KAAMP,W","sourcesContent":["import {\r\n  SUCCESS,\r\n  FAILED,\r\n  USER_AUTH,\r\n  REMOVE_ERRORS,\r\n  EDITSUCCESS,\r\n  COMPLETE,\r\n  LOGOUT,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nexport const InitialState = {\r\n  success: false,\r\n  successMessage: \"\",\r\n  errorMessage: \"\",\r\n  isCompletinfo: false,\r\n  token: token,\r\n  username: \"\",\r\n  id: \"\",\r\n  errors: {\r\n    username: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmpassword: \"\",\r\n  },\r\n};\r\n\r\nexport const UserReducer = (state = InitialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: payload.success,\r\n        successMessage: payload.successMessage,\r\n        token: payload.token,\r\n\r\n        username: payload.username,\r\n      };\r\n    case USER_AUTH:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          id: payload.id,\r\n        },\r\n      };\r\n    case EDITSUCCESS:\r\n      return {\r\n        ...state,\r\n        success: payload.success,\r\n        successMessage: payload.successMessage,\r\n      };\r\n    case COMPLETE:\r\n      return {\r\n        ...state,\r\n        success: payload.success,\r\n        isCompletinfo: payload.isCompletinfo,\r\n        username: payload.username,\r\n        id: payload.id,\r\n      };\r\n    case FAILED:\r\n      return { ...state, errorMessage: payload.error, success: false };\r\n    case REMOVE_ERRORS:\r\n      return { ...state, errorMessage: \"\" };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: \"\",\r\n        isCompletinfo: false,\r\n        username: \"\",\r\n        id: \"\",\r\n        successMessage: \"\",\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}