{"ast":null,"code":"import \"antd/lib/spin/style\";\nimport _Spin from \"antd/lib/spin\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/list/style\";\nimport _List from \"antd/lib/list\";\nimport \"antd/lib/avatar/style\";\nimport _Avatar from \"antd/lib/avatar\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Matcha\\\\client\\\\src\\\\components\\\\Blacklist.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { blackListAction, unBlockAction } from \"../actions/editActions\";\nimport { Context } from \"../Contexts/Context\";\nimport { useHistory } from \"react-router-dom\";\nimport { openMessageSuccess, openMessageError } from \"../helper/Verifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Blacklist = () => {\n  _s();\n\n  const {\n    state\n  } = useContext(Context);\n  const [blacklist, setBlacklist] = useState([]);\n  let history = useHistory();\n\n  const handleUserClicked = username => {\n    history.push(\"/profile/\" + username);\n  };\n\n  const handlUnBlockUser = async id => {\n    const res = await unBlockAction(state.token, id);\n\n    _message.loading(\"Loading...\", 2);\n\n    if (res.success) {\n      openMessageSuccess(res.message);\n      setBlacklist( // eslint-disable-next-line\n      blacklist.filter(item => {\n        if (item.id !== id) return item;\n      }));\n    } else {\n      openMessageError(res.error);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchBlacklist() {\n      const response = await blackListAction(state.token);\n\n      if (response.success) {\n        await setBlacklist(response.data);\n      }\n    }\n\n    fetchBlacklist();\n  }, [state.token]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_List, {\n      dataSource: blacklist,\n      renderItem: item => /*#__PURE__*/_jsxDEV(_List.Item, {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(_List.Item.Meta, {\n          style: {\n            flexBasis: \"70%\"\n          },\n          avatar: /*#__PURE__*/_jsxDEV(_Avatar, {\n            src: \"http://localhost:3001/api/\" + item.profile,\n            onClick: () => handleUserClicked(item.username)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this),\n          title: item.username,\n          description: item.country + \", \" + item.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(_Button, {\n            onClick: () => handlUnBlockUser(item.id),\n            type: \"primary\",\n            style: {\n              fontSize: \"0.6em\",\n              borderRadius: \"4px\"\n            },\n            children: \"Unblock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this),\n      children: blacklist.loading && blacklist.hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"demo-loading-container\",\n        children: /*#__PURE__*/_jsxDEV(_Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Blacklist, \"7wYw3BxZkle6rXxODIiPqjnBky8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Blacklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blacklist\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/Matcha/client/src/components/Blacklist.jsx"],"names":["React","useState","useEffect","useContext","blackListAction","unBlockAction","Context","useHistory","openMessageSuccess","openMessageError","Blacklist","state","blacklist","setBlacklist","history","handleUserClicked","username","push","handlUnBlockUser","id","res","token","loading","success","message","filter","item","error","fetchBlacklist","response","data","display","flexBasis","profile","country","city","fontSize","borderRadius","hasMore"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { List, Avatar, Spin, Button, message } from \"antd\";\r\nimport { blackListAction, unBlockAction } from \"../actions/editActions\";\r\nimport { Context } from \"../Contexts/Context\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { openMessageSuccess, openMessageError } from \"../helper/Verifications\";\r\nexport const Blacklist = () => {\r\n  const { state } = useContext(Context);\r\n  const [blacklist, setBlacklist] = useState([]);\r\n  let history = useHistory();\r\n\r\n  const handleUserClicked = (username) => {\r\n    history.push(\"/profile/\" + username);\r\n  };\r\n  const handlUnBlockUser = async (id) => {\r\n    const res = await unBlockAction(state.token, id);\r\n\r\n    message.loading(\"Loading...\", 2);\r\n    if (res.success) {\r\n      openMessageSuccess(res.message);\r\n      setBlacklist(\r\n        // eslint-disable-next-line\r\n        blacklist.filter((item) => {\r\n          if (item.id !== id) return item;\r\n        })\r\n      );\r\n    } else {\r\n      openMessageError(res.error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchBlacklist() {\r\n      const response = await blackListAction(state.token);\r\n      if (response.success) {\r\n        await setBlacklist(response.data);\r\n      }\r\n    }\r\n    fetchBlacklist();\r\n  }, [state.token]);\r\n\r\n  return (\r\n    <>\r\n      <List\r\n        dataSource={blacklist}\r\n        renderItem={(item) => (\r\n          <List.Item style={{ display: \"flex\" }} key={item.id}>\r\n            <List.Item.Meta\r\n              style={{ flexBasis: \"70%\" }}\r\n              avatar={\r\n                <Avatar\r\n                  src={\"http://localhost:3001/api/\" + item.profile}\r\n                  onClick={() => handleUserClicked(item.username)}\r\n                />\r\n              }\r\n              title={item.username}\r\n              description={item.country + \", \" + item.city}\r\n            />\r\n            <div>\r\n              <Button\r\n                onClick={() => handlUnBlockUser(item.id)}\r\n                type=\"primary\"\r\n                style={{ fontSize: \"0.6em\", borderRadius: \"4px\" }}>\r\n                Unblock\r\n              </Button>\r\n            </div>\r\n          </List.Item>\r\n        )}>\r\n        {blacklist.loading && blacklist.hasMore && (\r\n          <div className=\"demo-loading-container\">\r\n            <Spin />\r\n          </div>\r\n        )}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}