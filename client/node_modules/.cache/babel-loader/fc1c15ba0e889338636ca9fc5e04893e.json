{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Matcha\\\\client\\\\src\\\\Routing\\\\PublicRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isLogin } from \"../helper/Verifications\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PublicRoute = ({\n  component: Component,\n  restricted,\n  ...rest\n}) => {\n  return (\n    /*#__PURE__*/\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    _jsxDEV(Route, { ...rest,\n      render: props => isLogin() ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = PublicRoute;\nexport default PublicRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/Matcha/client/src/Routing/PublicRoute.js"],"names":["React","Route","Redirect","isLogin","PublicRoute","component","Component","restricted","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,yBAAxB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,UAAxB;AAAoC,KAAGC;AAAvC,CAAD,KAAmD;AACrE;AAAA;AACE;AACA;AACA,YAAC,KAAD,OACMA,IADN;AAEE,MAAA,MAAM,EAAGC,KAAD,IACNN,OAAO,kBAAK,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAL,gBAA+B,QAAC,SAAD,OAAeM;AAAf;AAAA;AAAA;AAAA;AAAA;AAH1C;AAAA;AAAA;AAAA;AAAA;AAHF;AAUD,CAXD;;KAAML,W;AAaN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isLogin } from \"../helper/Verifications\";\r\n\r\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\r\n  return (\r\n    // restricted = false meaning public route\r\n    // restricted = true meaning restricted route\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLogin() ? <Redirect to=\"/home\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n"]},"metadata":{},"sourceType":"module"}