{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Matcha\\\\client\\\\src\\\\Contexts\\\\Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport { InitialState, UserReducer } from \"../Reducers/UserReducer\";\nimport { getUserAction } from \"../actions/userAction\";\nimport { socketConn as socket } from \"../sockets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext(InitialState);\n_c = Context;\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(UserReducer, InitialState);\n  useEffect(() => {\n    async function fetchData() {\n      if (state.token) {\n        await getUserAction(state.token, dispatch);\n        socket.emit(\"userConneted\", state.token);\n      }\n    }\n\n    fetchData();\n  }, [state.token, state.id]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProvider, \"aL0+CyyxbGdD2Ehvvldjnt5Inmo=\");\n\n_c2 = UserProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Context\");\n$RefreshReg$(_c2, \"UserProvider\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/Matcha/client/src/Contexts/Context.js"],"names":["React","createContext","useReducer","useEffect","InitialState","UserReducer","getUserAction","socketConn","socket","Context","UserProvider","children","state","dispatch","fetchData","token","emit","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,yBAA1C;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,UAAU,IAAIC,MAAvB,QAAqC,YAArC;;AAEA,OAAO,MAAMC,OAAO,gBAAGR,aAAa,CAACG,YAAD,CAA7B;KAAMK,O;AAEb,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACG,WAAD,EAAcD,YAAd,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeW,SAAf,GAA2B;AACzB,UAAIF,KAAK,CAACG,KAAV,EAAiB;AACf,cAAMT,aAAa,CAACM,KAAK,CAACG,KAAP,EAAcF,QAAd,CAAnB;AACAL,QAAAA,MAAM,CAACQ,IAAP,CAAY,cAAZ,EAA4BJ,KAAK,CAACG,KAAlC;AACD;AACF;;AACDD,IAAAA,SAAS;AACV,GARQ,EAQN,CAACF,KAAK,CAACG,KAAP,EAAcH,KAAK,CAACK,EAApB,CARM,CAAT;AAUA,sBACE,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAzB;AAAA,cAA+CF;AAA/C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAfM;;GAAMD,Y;;MAAAA,Y","sourcesContent":["import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport { InitialState, UserReducer } from \"../Reducers/UserReducer\";\r\nimport { getUserAction } from \"../actions/userAction\";\r\nimport { socketConn as socket } from \"../sockets\";\r\n\r\nexport const Context = createContext(InitialState);\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(UserReducer, InitialState);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (state.token) {\r\n        await getUserAction(state.token, dispatch);\r\n        socket.emit(\"userConneted\", state.token);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [state.token, state.id]);\r\n\r\n  return (\r\n    <Context.Provider value={{ state, dispatch }}>{children}</Context.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}